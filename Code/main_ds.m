%% --- 现代控制理论课程设计：直流电机位置伺服系统 ---
%
% 本脚本将完成以下任务:
% 1. 建立直流电机的状态空间模型.
% 2. 分析开环系统的稳定性和能控性.
% 3. 使用极点配置法设计状态反馈控制器.
% 4. 使用LQR最优控制法设计状态反馈控制器.
% 5. 仿真并比较两种控制器的性能.
%
clc;
clear;
close all;

%% ========================================================================
% 第一步: 系统建模与参数定义
% =========================================================================
fprintf('--- 步骤 1: 系统建模 ---\n');

% 定义系统物理参数
J = 0.01;   % 转子转动惯量 (kg.m^2)
b = 0.1;    % 粘性摩擦系数 (N.m.s)
K_t = 0.01; % 电机转矩常数 (N.m/A)
K_e = 0.01; % 反电动势常数 (V/rad/s)
R = 1;      % 电枢电阻 (Ohm)
L = 0.5;    % 电枢电感 (H)

% 建立状态空间模型
% 状态向量 x = [theta; theta_dot; i] => [角度; 角速度; 电流]
% 输入 u = V => 电枢电压
% 输出 y = theta => 角度
A = [0, 1, 0; 
     0, -b/J, K_t/J; 
     0, -K_e/L, -R/L];

B = [0; 0; 1/L];

C = [1, 0, 0];

D = 0;

% 使用ss函数创建状态空间对象
sys_ol = ss(A, B, C, D);

fprintf('系统状态空间矩阵 A, B, C, D 定义完毕。\n\n');


%% ========================================================================
% 第二步: 开环系统分析
% =========================================================================
fprintf('--- 步骤 2: 开环系统分析 ---\n');

% 1. 分析稳定性
poles_ol = eig(A);
fprintf('开环系统极点 (A的特征值):\n');
disp(poles_ol);
% 结论: 存在一个零极点，系统为积分系统，不是渐进稳定的。

% 2. 分析能控性
Mc = ctrb(A, B);
rank_Mc = rank(Mc);
fprintf('能控性矩阵的秩: %d\n', rank_Mc);
if rank_Mc == size(A,1)
    fprintf('结论: 系统完全能控。\n\n');
else
    fprintf('结论: 系统不能控，无法进行状态反馈设计。\n\n');
    return; % 如果不能控，则停止执行
end

% 3. 仿真开环阶跃响应
figure('Name', '开环系统分析');
step(sys_ol);
title('开环系统阶跃响应');
xlabel('时间 (秒)');
ylabel('输出角度 (弧度)');
grid on;


%% ========================================================================
% 第三步: 控制器设计 - 方法一: 极点配置法
% =========================================================================
fprintf('--- 步骤 3: 极点配置法控制器设计 ---\n');

% 1. 定义性能指标 -> 计算期望极点
% 期望调节时间 Ts < 1s, 超调量 Overshoot < 5%
zeta = 0.707; % 阻尼比，对应约4.3%的超调
wn = 4 / (zeta * 1); % 根据Ts估算自然频率

% 期望的闭环极点 (一对共轭复数主导极点 + 一个非主导实数极点)
p1 = -zeta*wn + wn*sqrt(1-zeta^2)*1i;
p2 = conj(p1);
p3 = -5 * zeta * wn; % 非主导极点，比主导极点实部快5倍

poles_desired = [p1; p2; p3];
fprintf('期望配置的闭环极点:\n');
disp(poles_desired);

% 2. 使用place函数计算反馈增益K1
K1 = place(A, B, poles_desired);
fprintf('极点配置法计算得到的增益 K1:\n');
disp(K1);

% 3. 计算预补偿增益Nbar
% 为消除稳态误差，计算预补偿增益 Nbar
% Nbar = -1 / (C * (A-BK)^-1 * B)
Nbar1 = -1 / (C * inv(A - B*K1) * B);
fprintf('极点配置法的预补偿增益 Nbar1: %.4f\n\n', Nbar1);


%% ========================================================================
% 第四步: 控制器设计 - 方法二: LQR法
% =========================================================================
fprintf('--- 步骤 4: LQR法控制器设计 ---\n');

% 1. 定义Q和R权重矩阵
% Q矩阵惩罚状态偏差 [角度偏差, 角速度偏差, 电流偏差]
Q = diag([10, 1, 1]); 
% R矩阵惩罚控制输入 (能量消耗)
R_lqr = 0.1;

fprintf('LQR权重矩阵 Q:\n');
disp(Q);
fprintf('LQR权重矩阵 R: %.2f\n', R_lqr);

% 2. 使用lqr函数计算反馈增益K2
K2 = lqr(A, B, Q, R_lqr);
fprintf('LQR法计算得到的增益 K2:\n');
disp(K2);

% 3. 计算预补偿增益Nbar
Nbar2 = -1 / (C * inv(A - B*K2) * B);
fprintf('LQR法的预补偿增益 Nbar2: %.4f\n\n', Nbar2);


%% ========================================================================
% 第五步: 性能比较与分析 (已修复绘图问题)
% =========================================================================
fprintf('--- 步骤 5: 性能比较与分析 ---\n');

% 创建闭环系统
sys_final_pp = ss(A - B*K1, B * Nbar1, C, D);
sys_final_lqr = ss(A - B*K2, B * Nbar2, C, D);

% 1. 绘制两种控制器的阶跃响应对比图 (修复语法)
figure('Name', '控制器性能对比');
% 使用正确的step函数语法绘制多个系统
step(sys_final_pp, sys_final_lqr);
title('极点配置法 vs LQR法 阶跃响应对比');
xlabel('时间 (秒)');
ylabel('输出角度 (弧度)');
legend('极点配置法', 'LQR法', 'Location', 'southeast');
grid on;

% 2. 提取并打印量化性能指标
info1 = stepinfo(sys_final_pp, 'SettlingTimeThreshold', 0.02);
info2 = stepinfo(sys_final_lqr, 'SettlingTimeThreshold', 0.02);

fprintf('\n--- 性能指标量化对比 ---\n\n');
fprintf('指标\t\t\t极点配置\t\tLQR法\n');
fprintf('-----------------------------------------------------\n');
fprintf('调节时间(s)\t\t%.4f\t\t%.4f\n', info1.SettlingTime, info2.SettlingTime);
fprintf('超调量(%%)\t\t%.4f\t\t%.4f\n', info1.Overshoot, info2.Overshoot);
fprintf('上升时间(s)\t\t%.4f\t\t%.4f\n', info1.RiseTime, info2.RiseTime);
fprintf('峰值\t\t\t%.4f\t\t%.4f\n', info1.Peak, info2.Peak);
fprintf('峰值时间(s)\t\t%.4f\t\t%.4f\n', info1.PeakTime, info2.PeakTime);
fprintf('-----------------------------------------------------\n');